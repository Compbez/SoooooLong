#include <iostream.h>

using namespace std;

int main()
{
    FILE *f1;
    FILE *f2;
    char *Number1, *Number2, *Result, PreResult, *InvertNumber1, *InvertNumber2;
    int MaxLenght, MinLenght, i;
    char k=0, k2=0;
    FILE *f3;
    f1=fopen("1stNumb.txt", "r");
    f2=fopen("2ndNumb.txt", "r");
    f3=fopen("ResultNumb.txt", "w");
    fseek(f1, 0, SEEK_END);
    int File1Size=ftell(f1);
    rewind(f1);
    fseek(f2, 0, SEEK_END);
    int File2Size=ftell(f2);
    rewind(f2);
    if(File2Size>File1Size)
    {
                           MaxLenght=File2Size;
                           MinLenght=File1Size;
    }
    else
    {
        MaxLenght=File1Size;
        MinLenght=File2Size;
    }
     Number1 = new char [MaxLenght];
     Number2 = new char [MaxLenght];
     Result = new char [MaxLenght];
     for(i=0; i<File1Size; ++i)
            fscanf(f1, "%c", &Number1[i]);
     for(i=0; i<File2Size; ++i)
            fscanf(f2, "%c", &Number2[i]);
     if(File2Size>File1Size)
    {

                           for(i=0; i<MaxLenght; ++i)
                           {
                                    PreResult=Number1[i];
                                    Number1[i]=Number2[i];
                                    Number2[i]=PreResult;
                                    Result[i]=0;
                           }
                           fprintf(f3, "-");
    }
    if(File1Size==File2Size)
    {
                            for(i=0; i<MaxLenght; ++i)
                            {
                                     if(Number1[i]>=Number2[i])
                                                              break;
                                     else
                                     {
                                         for(int j=0; j<MaxLenght; ++j)
                                         {
                                                  PreResult=Number1[j];
                                                  Number1[j]=Number2[j];
                                                  Number2[j]=PreResult;
                                         }
                                         fprintf(f3, "-");
                                         break;
                                     }
                            }
    }
     InvertNumber1 = new char [MaxLenght];
     InvertNumber2 = new char [MaxLenght];
    for(i=0; i<MaxLenght; ++i)
             InvertNumber1[i]=Number1[MaxLenght-i-1];
    for(i=0; i<MinLenght; ++i)
             InvertNumber2[i]=Number2[MinLenght-i-1];        
    for(i=0; i<MinLenght; ++i)
    {
             if(InvertNumber1[i]<InvertNumber2[i])
             {
                                      Result[i]=InvertNumber1[i]+58-InvertNumber2[i];
                                      InvertNumber1[i+1]-=1;
             }
             else
                 Result[i]=InvertNumber1[i]-InvertNumber2[i]+48;
    }
    for(i=MinLenght; i<MaxLenght; ++i)
                     Result[i]=InvertNumber1[i];
    for(i=0; i<MaxLenght; ++i)
             fprintf(f3, "%c", Result[MaxLenght-i-1]);
    system("pause");
    return 0;
}
